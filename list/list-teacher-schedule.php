<?php
$header = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–ª–∞–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π';
require_once '../secure.php';
if (!Helper::can('owner') && !Helper::can('admin')) {
    header('Location: 404');
    exit();
}

$teachers = (new TeacherMap())->arrTeachers();

require_once '../template/header.php';
?>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <section class="content-header">
                    <h3><b><?= $header; ?></b></h3>
                    <ol class="breadcrumb">
                        <li><a href="../index"><i class="fa fa-dashboard"></i> –ì–ª–∞–≤–Ω–∞—è</a></li>
                        <li class="active"><?= $header; ?></li>
                    </ol>
                </section>
                <div class="box-body">
                    <form id="filterForm" method="get">
                        <div class="form-group">
                            <label for="group">–ì—Ä—É–ø–ø–∞</label>
                            <select class="form-control" id="group" name="group">
                                <?= Helper::printSelectOptions(0, (new GruppaMap())->arrGruppas()) ?>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="subject">–ü—Ä–µ–¥–º–µ—Ç</label>
                            <select class="form-control" id="subject" name="subject">
                                <?= Helper::printSelectOptions(0, (new SubjectMap())->arrSubjects()) ?>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="teacher">–£—á–∏—Ç–µ–ª—å</label>
                            <select class="form-control" id="teacher" name="teacher">
                                <?= Helper::printSelectOptions(0, (new TeacherMap())->arrTeachers()) ?>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="teacher">–ö–∞–±–∏–Ω–µ—Ç</label>
                            <select class="form-control" id="classroom" name="classroom">
                                <?= Helper::printSelectOptions(0, (new ClassroomMap())->arrClassrooms()) ?>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="month">–ú–µ—Å—è—Ü</label>
                            <input class="form-control" type="month" id="month" name="month">
                        </div>
                        <button type="submit" class="btn btn-primary">–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å</button>
                    </form>
                </div>
                <div id="calendar"></div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('filterForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const group = document.getElementById('group').value;
            const subject = document.getElementById('subject').value;
            const teacher = document.getElementById('teacher').value;
            const month = document.getElementById('month').value;
            const classroom = document.getElementById('classroom').value;
            const createdIcons = {};

            fetch('../save/save-schedule.php', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({group, subject, teacher, month, classroom})
            })
                .then(response => response.json())
                .then(eventsData => {
                    const calendarEl = document.getElementById('calendar');

                    if (window.calendarInstance) {
                        window.calendarInstance.destroy();
                    }

                    window.calendarInstance = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        initialDate: month + '-01',
                        events: eventsData,
                        headerToolbar: {
                            left: '',   // —É–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–µ–≤–∞ (–≤–∫–ª—é—á–∞—è today)
                            center: 'title', // –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ—Å—è—Ü–∞
                            right: ''   // —É–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø—Ä–∞–≤–∞ (–≤–∫–ª—é—á–∞—è —Å—Ç—Ä–µ–ª–∫–∏)
                        },
                        eventContent: function (arg) {
                            let parentContainer = document.createElement('div');

                            // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —è—á–µ–π–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
                            let cellDate = arg.event.startStr.split('T')[0]; // –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É

                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞ –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã
                            if (!createdIcons[cellDate]) {
                                let btn = document.createElement('button');
                                btn.innerHTML = 'üìÖ'; // –ò–∫–æ–Ω–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                                btn.style.border = 'none';
                                btn.style.background = 'transparent';
                                btn.style.cursor = 'pointer';
                                btn.style.marginLeft = '5px';

                                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∏–∫–æ–Ω–∫–µ
                                btn.addEventListener('click', function (event) {
                                    event.stopPropagation();
                                    openModal(cellDate); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
                                });

                                parentContainer.appendChild(btn);

                                // –ü–æ–º–µ—á–∞–µ–º –¥–∞—Ç—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é
                                createdIcons[cellDate] = true;
                            }

                            return {domNodes: [parentContainer]};
                        },

                        dateClick: function (info) {
                            let clickedDate = new Date(info.dateStr);
                            let selectedMonth = new Date(`${month}-01`);

                            if (clickedDate.getFullYear() !== selectedMonth.getFullYear() || clickedDate.getMonth() !== selectedMonth.getMonth()) {
                                alert('–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –º–µ—Å—è—Ü—É!');
                                return;
                            }

                            document.querySelectorAll('.time-input').forEach(el => el.remove());

                            let cell = document.querySelector(`[data-date="${info.dateStr}"]`);
                            if (!cell) return;

                            let input = document.createElement('input');
                            input.type = 'time';
                            input.classList.add('time-input');
                            input.style.position = 'absolute';
                            input.style.zIndex = '1000';
                            input.style.width = '80px';
                            input.style.background = 'white';
                            input.style.border = '1px solid #ccc';
                            input.style.padding = '2px';
                            input.style.marginTop = '5px';

                            let rect = cell.getBoundingClientRect();
                            input.style.left = `${rect.left + window.scrollX + 5}px`;
                            input.style.top = `${rect.top + window.scrollY + 5}px`;

                            document.body.appendChild(input);
                            input.focus();

                            input.addEventListener('change', function () {
                                fetch('../save/save-schedule.php', {
                                    method: 'POST',
                                    headers: {'Content-Type': 'application/json'},
                                    body: JSON.stringify({
                                        group, subject, teacher, month, classroom,
                                        day: info.dateStr, time: input.value
                                    })
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            alert('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
                                            window.calendarInstance.refetchEvents();
                                        } else {
                                            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!');
                                        }
                                    });

                                input.remove();
                            });

                            document.addEventListener('click', function outsideClick(e) {
                                if (!input.contains(e.target)) {
                                    input.remove();
                                    document.removeEventListener('click', outsideClick);
                                }
                            });
                        }
                    });

                    window.calendarInstance.render();
                })
                .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error));
        });

        function openModal(date) {
            let dateOnly = date.split("T")[0];
            document.getElementById('modalDate').textContent = dateOnly;
            const teacher = document.getElementById('teacher').value;
            const group = document.getElementById('group').value;

            fetch(`../save/save-schedule.php`, {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({day: dateOnly, teacher: teacher, group: group})
            })
                .then(response => response.json())
                .then(data => {
                    const scheduleList = document.getElementById('scheduleList');
                    scheduleList.innerHTML = '';

                    if (!Array.isArray(data) || data.length === 0) {
                        scheduleList.innerHTML = '<li>–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π</li>';
                        return;
                    }

                    data.forEach(event => {
                        let li = document.createElement('li');
                        li.dataset.eventId = event.id; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–±—ã—Ç–∏—è
                        // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞
                        let contentSpan = document.createElement('span');
                        contentSpan.textContent = `${event.time} - –ü—Ä–µ–¥–º–µ—Ç: ${event.subject_name}, –£—á–∏—Ç–µ–ª—å: ${event.teacher_fio}, –ö–∞–±–∏–Ω–µ—Ç: ${event.classroom_name}, –ì—Ä—É–ø–ø–∞: ${event.gruppa_name}`;

                        // –ò–∫–æ–Ω–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                        let editIcon = document.createElement('i');
                        editIcon.className = 'fa fa-pencil';
                        editIcon.style.cursor = 'pointer';
                        editIcon.style.marginLeft = '10px';

                        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∏–∫–æ–Ω–∫–µ
                        editIcon.addEventListener('click', function () {
                            openEditForm(li, event);
                        });

                        li.appendChild(contentSpan);
                        li.appendChild(editIcon);
                        scheduleList.appendChild(li);
                    });
                })
                .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error));

            document.getElementById('scheduleModal').style.display = 'block';
            document.querySelector('.close').addEventListener('click', function () {
                document.getElementById('scheduleModal').style.display = 'none';
            });
        }

        function openEditForm(liElement, eventData) {
            // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            let form = document.createElement('form');
            form.className = 'edit-form';

            let scheduleIdInput = document.createElement('input');
            scheduleIdInput.type = 'hidden';
            scheduleIdInput.name = 'schedule_id';
            scheduleIdInput.value = eventData.schedule_id;
            form.appendChild(scheduleIdInput);

            // –ü–æ–ª–µ –≤—Ä–µ–º–µ–Ω–∏
            let timeDiv = document.createElement('div');
            timeDiv.innerHTML = `
        <label>–í—Ä–µ–º—è:</label>
        <input type="time" name="time" value="${eventData.time}" required>
    `;

            // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è select'–æ–≤
            form.appendChild(timeDiv);

            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è select'–æ–≤
            let subjectDiv = document.createElement('div');
            subjectDiv.innerHTML = '<label>–ü—Ä–µ–¥–º–µ—Ç:</label><select name="subject" required></select>';

            let teacherDiv = document.createElement('div');
            teacherDiv.innerHTML = '<label>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</label><select name="teacher" required></select>';

            let classroomDiv = document.createElement('div');
            classroomDiv.innerHTML = '<label>–ö–∞–±–∏–Ω–µ—Ç:</label><select name="classroom" required></select>';

            let groupDiv = document.createElement('div');
            groupDiv.innerHTML = '<label>–ì—Ä—É–ø–ø–∞:</label><select name="group" required></select>';

            form.appendChild(subjectDiv);
            form.appendChild(teacherDiv);
            form.appendChild(classroomDiv);
            form.appendChild(groupDiv);

            // –ó–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ li –Ω–∞ —Ñ–æ—Ä–º—É (–ø–æ–∫–∞ –±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö select'–æ–≤)
            liElement.innerHTML = '';
            liElement.appendChild(form);
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ select'–∞
            loadSelectOptions('subject', eventData.subject_id);
            loadSelectOptions('teacher', eventData.teacher_id);
            loadSelectOptions('classroom', eventData.classroom_id);
            loadSelectOptions('group', eventData.gruppa_id);

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π
            function loadSelectOptions(fieldName, selectedId) {
                fetch(`../get-options.php?type=${fieldName}`, {
                    method: 'GET', // —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ GET
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(options => {
                        const select = form.querySelector(`[name="${fieldName}"]`);
                        select.innerHTML = '';

                        options.forEach(option => {
                            const optElement = document.createElement('option');
                            optElement.value = option.id;
                            optElement.textContent = option.value;
                            if (option.id == selectedId) {
                                optElement.selected = true;
                            }
                            select.appendChild(optElement);
                        });
                    })
                    .catch(error => console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${fieldName}:`, error));
            }

            // –ö–Ω–æ–ø–∫–∏
            let buttonsDiv = document.createElement('div');
            buttonsDiv.style.marginTop = '10px';
            buttonsDiv.innerHTML = `
        <button type="submit" class="save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button type="button" class="cancel-btn">–û—Ç–º–µ–Ω–∞</button>
    `;

            form.appendChild(buttonsDiv);

            // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π) –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                saveChanges(liElement, eventData.id, form);
            });

            form.querySelector('.cancel-btn').addEventListener('click', function () {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                let contentSpan = document.createElement('span');
                contentSpan.textContent = `${eventData.time} - –ü—Ä–µ–¥–º–µ—Ç: ${eventData.subject_name}, –£—á–∏—Ç–µ–ª—å: ${eventData.teacher_fio}, –ö–∞–±–∏–Ω–µ—Ç: ${eventData.classroom_name}, –ì—Ä—É–ø–ø–∞: ${eventData.gruppa_name}`;

                let editIcon = document.createElement('i');
                editIcon.className = 'fa fa-pencil';
                editIcon.style.cursor = 'pointer';
                editIcon.style.marginLeft = '10px';
                editIcon.addEventListener('click', function () {
                    openEditForm(liElement, eventData);
                });

                liElement.innerHTML = '';
                liElement.appendChild(contentSpan);
                liElement.appendChild(editIcon);
            });
        }

        function saveChanges(liElement, eventId, form) {
            const formData = {
                id: eventId,
                schedule_id: form.querySelector('[name="schedule_id"]').value,
                time: form.querySelector('[name="time"]').value,
                subject: form.querySelector('[name="subject"]').value,
                teacher: form.querySelector('[name="teacher"]').value,
                classroom: form.querySelector('[name="classroom"]').value,
                group: form.querySelector('[name="group"]').value
            };
            fetch('../update-schedule.php', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        let contentSpan = document.createElement('span');
                        contentSpan.textContent = `${formData.time} - –ü—Ä–µ–¥–º–µ—Ç: ${form.querySelector('[name="subject"] option:selected').textContent}, ` +
                            `–£—á–∏—Ç–µ–ª—å: ${form.querySelector('[name="teacher"] option:selected').textContent}, ` +
                            `–ö–∞–±–∏–Ω–µ—Ç: ${form.querySelector('[name="classroom"] option:selected').textContent}, ` +
                            `–ì—Ä—É–ø–ø–∞: ${form.querySelector('[name="group"] option:selected').textContent}`;

                        let editIcon = document.createElement('i');
                        editIcon.className = 'fa fa-pencil';
                        editIcon.style.cursor = 'pointer';
                        editIcon.style.marginLeft = '10px';
                        editIcon.addEventListener('click', function () {
                            openEditForm(liElement, {
                                id: eventId,
                                time: formData.time,
                                subject_id: formData.subject,
                                subject_name: form.querySelector('[name="subject"] option:selected').textContent,
                                teacher_id: formData.teacher,
                                teacher_fio: form.querySelector('[name="teacher"] option:selected').textContent,
                                classroom_id: formData.classroom,
                                classroom_name: form.querySelector('[name="classroom"] option:selected').textContent,
                                gruppa_id: formData.group,
                                gruppa_name: form.querySelector('[name="group"] option:selected').textContent,
                            });
                        });

                        liElement.innerHTML = '';
                        liElement.appendChild(contentSpan);
                        liElement.appendChild(editIcon);

                        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                        if (window.calendarInstance) {
                            window.calendarInstance.refetchEvents();
                        }
                    } else {
                        alert((data.message || ''));
                    }
                })
                .catch(error => {
                    console.error('–û—à–∏–±–∫–∞:', error);
                    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π');
                });
        }
    </script>

    <div id="scheduleModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <span id="modalDate"></span></h2>
            <ul id="scheduleList"></ul>
        </div>
    </div>
<?php
require_once '../template/footer.php';
?>